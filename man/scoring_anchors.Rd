% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main.R
\name{scoring_anchors}
\alias{scoring_anchors}
\title{Anchor scoring function}
\usage{
scoring_anchors(
  anchors,
  alpha = 0.5,
  remove_inconsistent_anchors = T,
  dist.hard.thr = NULL,
  dist.mean.center = NULL,
  dist.mean.scale = NULL,
  q.dist.mean.center = NULL,
  dist_scale_factor = 1,
  beta = 0.5,
  q_boltzmann = 0.8,
  plot = F
)
}
\arguments{
\item{anchors}{anchor object obtained from \code{inconsistent_anchors} STACAS function. - Scoring will be applied to this object}

\item{alpha}{A tabular model with scGate signatures. See Details for this format}

\item{remove_inconsistent_anchors}{}

\item{dist.hard.thr}{hard threshold to emulate the classical STACAS behavior}

\item{dist.mean.center}{center of logistic function for transforming PCA distance}

\item{dist.mean.scale}{scale of logistic function for transforming PCA distance}

\item{q.dist.mean.center}{center of logistic function based on quantile value of PCA  distance distribution}

\item{beta}{this parameter controls the way in which inconsistent anchors will be penalized.}

\item{q_boltzmann}{this parameter defines a a baseline threshold to decide if reject an inconsistent anchor or not.}

\item{plot}{logical indicating if scoring must be plotted as a function of PCA distance}

\item{dist.scale.factor}{scale factor of logistic function based on standard deviation of PCA distance distribution}
}
\value{
A new anchor object with modified anchor's scoring.
}
\description{
Score anchors by mixing MNN based score and PCA based anchor distance
}
\details{
beta = 1: all inconsistent anchors will be removed. 
beta = 0 (q_boltzmann != 0)  all inconsistent anchors having a score above the given quantile of non-inconsistent anchor score distribution, will be accepted.
In the interval (0,1), this parameter allows inconsistent anchors to be randomly accepted with a boltzman distribution probability which scale is controled by beta. 
The higher beta, the lower probability or rejecting an inconsistent anchor.  
beta = 0 (q_boltzmann = 0) all anchors will be accepted either inconsistent or not (not recommended)
alpha = 1: distance based score (no knn is considered)
alpha = 0: knn based score
alpha = 0.5 equal weight for distance and knn (dot product) for score computing. 
beta = 0.5 allows some anchors randomly be accepted because its score is above a given quantile threshold of "non-inconsistent anchor score distribution" (q_boltzman)
beta = 0:  
beta = 0, q_boltzman = 0: all anchors will be accepted either inconsistent or not (not recommended)
dist.hard.threshold is intended to reproduce similar behaviour to original STACAS algorithm (but avoiding Errors because lack of anchors)  ## ToDo a warning must be set here when few anchors survive
}
\examples{
library(STACAS)
}
